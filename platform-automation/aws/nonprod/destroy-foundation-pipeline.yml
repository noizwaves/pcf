resources:
  - name: platform-automation-tasks
    type: s3
    source:
      access_key_id: ((s3.access_key_id))
      secret_access_key: ((s3.secret_access_key))
      region_name: ((s3.region_name))
      bucket: ((s3.buckets.pivnet_products))
      regexp: .*tasks-(.*).zip

  - name: platform-automation-image
    type: s3
    source:
      access_key_id: ((s3.access_key_id))
      secret_access_key: ((s3.secret_access_key))
      region_name: ((s3.region_name))
      bucket: ((s3.buckets.pivnet_products))
      regexp: .*image-(.*).tgz

  # configurations
  - name: configuration
    type: git
    source:
      private_key: ((configuration.private_key))
      uri: ((configuration.uri))
      branch: master

  - name: variable
    type: git
    source:
      private_key: ((variable.private_key))
      uri: ((variable.uri))
      branch: master

jobs:
  - name: destroy-foundation
    serial: true
    serial_groups: [ install ]
    plan:
      - aggregate:
          - get: platform-automation-image
            params:
              unpack: true
          - get: platform-automation-tasks
            params:
              unpack: true
          - get: configuration
          - get: variable
      - task: write-credhub-ca-cert
        image: platform-automation-image
        params:
          CA_CERT_VALUE: ((credhub-ca-cert))
        input_mapping:
          files: variable
        output_mapping:
          certs: variable
        config:
          platform: linux
          inputs:
            - name: files
          outputs:
            - name: certs
          run:
            path: /bin/sh
            args:
            - -c
            - |
              cp -a files/. certs/

              # Format the cert correctly... because the env var lost its formatting
              echo $CA_CERT_VALUE > certs/temp
              echo "-----BEGIN CERTIFICATE-----" > certs/credhub_ca_cert
              cat certs/temp | sed -E 's/\s+/\r\n/g' | sed '/^-/ d' | sed '/-$/ d' | sed '/CERTIFICATE-----/ d' >> certs/credhub_ca_cert
              echo "-----END CERTIFICATE-----" >> certs/credhub_ca_cert
      - task: credhub-interpolate
        image: platform-automation-image
        file: platform-automation-tasks/tasks/credhub-interpolate.yml
        params:
          CREDHUB_CLIENT: ((credhub-client))
          CREDHUB_SECRET: ((credhub-secret))
          CREDHUB_SERVER: ((credhub-server))
          CREDHUB_CA_CERT: files/credhub_ca_cert
          PREFIX: '/pipeline/nonprod'
          INTERPOLATION_PATH: ((foundation))
        input_mapping:
          files: variable
        output_mapping:
          interpolated-files: variable
      - task: delete-installation
        image: platform-automation-image
        file: platform-automation-tasks/tasks/delete-installation.yml
        params:
          ENV_FILE: ((foundation))/env.yml
        input_mapping:
          env: variable
      - task: delete-vm
        image: platform-automation-image
        file: platform-automation-tasks/tasks/delete-vm.yml
        input_mapping:
          state: configuration
          config: configuration
          vars: variable
        params:
          VARS_FILES: vars/((foundation))/opsman-vars.yml
          STATE_FILE: ((foundation))/state/state.yml
          OPSMAN_CONFIG_FILE: ((foundation))/config/opsman.yml
        ensure: &make-state-commit
          do:
            - task: make-commit
              image: platform-automation-image
              file: platform-automation-tasks/tasks/make-git-commit.yml
              input_mapping:
                repository: configuration
                file-source: generated-state
              output_mapping:
                repository-commit: configuration-commit
              params:
                FILE_SOURCE_PATH: state.yml
                FILE_DESTINATION_PATH: ((foundation))/state/state.yml
                GIT_AUTHOR_EMAIL: "pcf-pipeline-bot@example.com"
                GIT_AUTHOR_NAME: "Platform Automation Bot"
                COMMIT_MESSAGE: 'Update state file'
            - put: configuration
              params:
                repository: configuration-commit
                merge: true
